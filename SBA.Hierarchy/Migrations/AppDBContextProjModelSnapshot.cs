// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SBA.Hierarchy.Common;

#nullable disable

namespace SBA.Hierarchy.Migrations
{
    [DbContext(typeof(AppDBContextProj))]
    partial class AppDBContextProjModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GLOB.Domain.Entity.BG", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Created_At");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Updated_At");

                    b.HasKey("Id");

                    b.ToTable("BGs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "BG 1 Desc",
                            Title = "BG 1",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "BG 2 Desc",
                            Title = "BG 2",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "BG 3 Desc",
                            Title = "BG 3",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("GLOB.Domain.Entity.LE", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("BGId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Created_At");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Updated_At");

                    b.HasKey("Id");

                    b.HasIndex("BGId");

                    b.ToTable("LEs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BGId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "LE 1 Desc",
                            Title = "LE 1",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            BGId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "LE 2 Desc",
                            Title = "LE 2",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            BGId = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "LE 3 Desc",
                            Title = "LE 3",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("GLOB.Domain.Entity.OU", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Created_At");

                    b.Property<string>("Deposit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LEId")
                        .HasColumnType("int");

                    b.Property<string>("Law")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Updated_At");

                    b.Property<string>("WarningImg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LEId");

                    b.ToTable("OUs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "OUAddress",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Deposit = "OUDeposit",
                            Desc = "OU 1 Desc",
                            FooterImg = "OUFooterImg",
                            LEId = 1,
                            Law = "OULaw",
                            LogoImg = "OULogoImg",
                            Title = "OU 1",
                            TopImg = "OUTopImg",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            WarningImg = "OUWarningImg"
                        },
                        new
                        {
                            Id = 2,
                            Address = "OUAddress",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Deposit = "OUDeposit",
                            Desc = "OU 2 Desc",
                            FooterImg = "OUFooterImg",
                            LEId = 2,
                            Law = "OULaw",
                            LogoImg = "OULogoImg",
                            Title = "OU 2",
                            TopImg = "OUTopImg",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            WarningImg = "OUWarningImg"
                        },
                        new
                        {
                            Id = 3,
                            Address = "OUAddress",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Deposit = "OUDeposit",
                            Desc = "OU 3 Desc",
                            FooterImg = "OUFooterImg",
                            LEId = 3,
                            Law = "OULaw",
                            LogoImg = "OULogoImg",
                            Title = "OU 3",
                            TopImg = "OUTopImg",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            WarningImg = "OUWarningImg"
                        });
                });

            modelBuilder.Entity("GLOB.Domain.Entity.Org", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Created_At");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Updated_At");

                    b.HasKey("Id");

                    b.ToTable("Orgs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "Org 1 Desc",
                            Title = "Org 1",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "Org 2 Desc",
                            Title = "Org 2",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "Org 3 Desc",
                            Title = "Org 3",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("GLOB.Domain.Entity.SU", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Created_At");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OUId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Updated_At");

                    b.HasKey("Id");

                    b.HasIndex("OUId");

                    b.ToTable("SUs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "SU 1 Desc",
                            OUId = 1,
                            Title = "SU 1",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "SU 2 Desc",
                            OUId = 2,
                            Title = "SU 2",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "SU 3 Desc",
                            OUId = 3,
                            Title = "SU 3",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("GLOB.Domain.Entity.Systemz", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Created_At");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrgId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Updated_At");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("Systemzs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "Systemz 1 Desc",
                            OrgId = 1,
                            Title = "Systemz 1",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "Systemz 2 Desc",
                            OrgId = 2,
                            Title = "Systemz 2",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "Systemz 3 Desc",
                            OrgId = 3,
                            Title = "Systemz 3",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("GLOB.Domain.Entity.TestInfra", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Created_At");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Updated_At");

                    b.HasKey("Id");

                    b.ToTable("TestInfras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "TestInfra 1 Desc",
                            Title = "TestInfra 1",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "TestInfra 2 Desc",
                            Title = "TestInfra 2",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "TestInfra 3 Desc",
                            Title = "TestInfra 3",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("GLOB.Domain.Entity.TestProj", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Created_At");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Updated_At");

                    b.HasKey("Id");

                    b.ToTable("TestProjs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "TestProj 1 Desc",
                            Title = "TestProj 1",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "TestProj 2 Desc",
                            Title = "TestProj 2",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0)),
                            Desc = "TestProj 3 Desc",
                            Title = "TestProj 3",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 2, 10, 8, 21, 57, 0, DateTimeKind.Unspecified), new TimeSpan(0, 5, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("GLOB.Domain.Entity.LE", b =>
                {
                    b.HasOne("GLOB.Domain.Entity.BG", "BG")
                        .WithMany("LEs")
                        .HasForeignKey("BGId");

                    b.Navigation("BG");
                });

            modelBuilder.Entity("GLOB.Domain.Entity.OU", b =>
                {
                    b.HasOne("GLOB.Domain.Entity.LE", "LE")
                        .WithMany("OUs")
                        .HasForeignKey("LEId");

                    b.Navigation("LE");
                });

            modelBuilder.Entity("GLOB.Domain.Entity.SU", b =>
                {
                    b.HasOne("GLOB.Domain.Entity.OU", "OU")
                        .WithMany("SUs")
                        .HasForeignKey("OUId");

                    b.Navigation("OU");
                });

            modelBuilder.Entity("GLOB.Domain.Entity.Systemz", b =>
                {
                    b.HasOne("GLOB.Domain.Entity.Org", "Org")
                        .WithMany("Systemzs")
                        .HasForeignKey("OrgId");

                    b.Navigation("Org");
                });

            modelBuilder.Entity("GLOB.Domain.Entity.BG", b =>
                {
                    b.Navigation("LEs");
                });

            modelBuilder.Entity("GLOB.Domain.Entity.LE", b =>
                {
                    b.Navigation("OUs");
                });

            modelBuilder.Entity("GLOB.Domain.Entity.OU", b =>
                {
                    b.Navigation("SUs");
                });

            modelBuilder.Entity("GLOB.Domain.Entity.Org", b =>
                {
                    b.Navigation("Systemzs");
                });
#pragma warning restore 612, 618
        }
    }
}
